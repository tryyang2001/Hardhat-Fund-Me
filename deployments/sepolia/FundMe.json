{
  "address": "0xB596D198778Ed4f0d02448A6E4E58174F15c2Ea6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MIN_FUND_IN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeedVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x21ad0bf1717e46d8c7eb9e2d791799d4e23a0660136504f2d755557bf9b945e8",
  "receipt": {
    "to": null,
    "from": "0xc712C1E8ff19e5C1533EA826df0ee4250c129ebb",
    "contractAddress": "0xB596D198778Ed4f0d02448A6E4E58174F15c2Ea6",
    "transactionIndex": 64,
    "gasUsed": "812064",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x95cdb3de11453cb1389391b3dbe0b307a7835fe7ea5e85d99d2e89701d072aca",
    "transactionHash": "0x21ad0bf1717e46d8c7eb9e2d791799d4e23a0660136504f2d755557bf9b945e8",
    "logs": [],
    "blockNumber": 5050910,
    "cumulativeGasUsed": "10734521",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "7cf8963a73062f801ec4b6d8030533fb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MIN_FUND_IN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeedVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"tryyang2001\",\"details\":\"This contract is used to fund the contract with ETHAll function calls are currently implemented without side effects\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FundMe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"You can use this contract for only the most basic simulation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/EthPriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary EthPriceConverter {\\r\\n    /**\\r\\n        * @dev Returns the latest price of ETH -> USD\\r\\n     */\\r\\n    function getCurrentPriceTrend(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\r\\n        return uint256(price);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        * @dev Returns the amount of ETH in USD\\r\\n     */\\r\\n    function convertToUSD(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        uint256 ethPrice = getCurrentPriceTrend(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x0599af4b6dcb0c320dc110480f1802e650f07e2b1f8818ce95683856023a2a9e\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./EthPriceConverter.sol\\\";\\n\\n/**\\n    * @title FundMe\\n    * @dev This contract is used to fund the contract with ETH\\n    * @author tryyang2001\\n    * @notice You can use this contract for only the most basic simulation\\n    * @dev All function calls are currently implemented without side effects\\n */\\ncontract FundMe {\\n    // library declaration\\n    using EthPriceConverter for AggregatorV3Interface;\\n\\n    // constants\\n    uint256 public constant MIN_FUND_IN_USD = 50;\\n\\n    // variables\\n    // (funder => amount in wei)\\n    mapping(address => uint256) private addressToAmountFunded;\\n    address[] private funders;\\n    address private immutable owner;\\n    AggregatorV3Interface private priceFeed;\\n    address private immutable priceFeedAddress;\\n\\n    constructor(address _priceFeed) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n        priceFeedAddress = _priceFeed;\\n    }\\n\\n    function fund() public payable {\\n        require(EthPriceConverter.convertToUSD(msg.value, priceFeed) >= MIN_FUND_IN_USD, \\\"The transaction amount is too low\\\");\\n\\n        // successful transaction\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public restrictToOwner {\\n        // use call for reliable transaction\\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Failed to withdraw funds from the contract\\\");\\n\\n        // reset the mapping\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            addressToAmountFunded[funders[i]] = 0;\\n        }\\n    }\\n\\n    // getter\\n    function getPriceFeedAddress() public view returns(address) {\\n        return priceFeedAddress;\\n    }\\n    function getPriceFeedVersion() public view returns(uint256) {\\n        return priceFeed.version();\\n    }\\n\\n    function getOwner() public view returns(address) {\\n        return owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address) {\\n        return funders[index];\\n    }\\n\\n    function getAmountFunded(address funder) public view returns(uint256) {\\n        return addressToAmountFunded[funder];\\n    }\\n\\n    modifier restrictToOwner() {\\n        require(msg.sender == owner, \\\"You are not the owner of the contract\\\");\\n        _;\\n    }\\n\\n}\",\"keccak256\":\"0xb61d04029496b2bb16a561e443da799c6323d0314934677c829b850719d4a87e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610ee5380380610ee583398181016040528101906100329190610144565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610171565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610111826100e6565b9050919050565b61012181610106565b811461012c57600080fd5b50565b60008151905061013e81610118565b92915050565b60006020828403121561015a576101596100e1565b5b60006101688482850161012f565b91505092915050565b60805160a051610d4861019d60003960006101cb0152600081816101f101526103d60152610d486000f3fe60806040526004361061007b5760003560e01c8063aec65af41161004e578063aec65af41461012a578063b60d428814610155578063d7b4750c1461015f578063f9e6e80c1461019c5761007b565b80630f0f30b2146100805780633ccfd60b146100ab578063893d20e8146100c2578063a48b4555146100ed575b600080fd5b34801561008c57600080fd5b506100956101c7565b6040516100a2919061074e565b60405180910390f35b3480156100b757600080fd5b506100c06101ef565b005b3480156100ce57600080fd5b506100d76103d2565b6040516100e4919061074e565b60405180910390f35b3480156100f957600080fd5b50610114600480360381019061010f919061079a565b6103fa565b60405161012191906107e0565b60405180910390f35b34801561013657600080fd5b5061013f610442565b60405161014c91906107e0565b60405180910390f35b61015d6104da565b005b34801561016b57600080fd5b5061018660048036038101906101819190610827565b610603565b604051610193919061074e565b60405180910390f35b3480156101a857600080fd5b506101b161064b565b6040516101be91906107e0565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610274906108d7565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102a390610928565b60006040518083038185875af1925050503d80600081146102e0576040519150601f19603f3d011682016040523d82523d6000602084013e6102e5565b606091505b5050905080610329576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610320906109af565b60405180910390fd5b60005b6001805490508110156103ce57600080600060018481548110610352576103516109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c690610a2d565b91505061032c565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610a8a565b905090565b603261050834600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610650565b1015610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054090610b29565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105979190610b49565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060018281548110610619576106186109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b603281565b60008061065c8361068c565b90506000670de0b6b3a764000085836106759190610b7d565b61067f9190610bee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe9190610c97565b50505091505080915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107388261070d565b9050919050565b6107488161072d565b82525050565b6000602082019050610763600083018461073f565b92915050565b600080fd5b6107778161072d565b811461078257600080fd5b50565b6000813590506107948161076e565b92915050565b6000602082840312156107b0576107af610769565b5b60006107be84828501610785565b91505092915050565b6000819050919050565b6107da816107c7565b82525050565b60006020820190506107f560008301846107d1565b92915050565b610804816107c7565b811461080f57600080fd5b50565b600081359050610821816107fb565b92915050565b60006020828403121561083d5761083c610769565b5b600061084b84828501610812565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686520636f6e60008201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b60006108c1602583610854565b91506108cc82610865565b604082019050919050565b600060208201905081810360008301526108f0816108b4565b9050919050565b600081905092915050565b50565b60006109126000836108f7565b915061091d82610902565b600082019050919050565b600061093382610905565b9150819050919050565b7f4661696c656420746f2077697468647261772066756e64732066726f6d20746860008201527f6520636f6e747261637400000000000000000000000000000000000000000000602082015250565b6000610999602a83610854565b91506109a48261093d565b604082019050919050565b600060208201905081810360008301526109c88161098c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a38826107c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6a57610a696109fe565b5b600182019050919050565b600081519050610a84816107fb565b92915050565b600060208284031215610aa057610a9f610769565b5b6000610aae84828501610a75565b91505092915050565b7f546865207472616e73616374696f6e20616d6f756e7420697320746f6f206c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b13602183610854565b9150610b1e82610ab7565b604082019050919050565b60006020820190508181036000830152610b4281610b06565b9050919050565b6000610b54826107c7565b9150610b5f836107c7565b9250828201905080821115610b7757610b766109fe565b5b92915050565b6000610b88826107c7565b9150610b93836107c7565b9250828202610ba1816107c7565b91508282048414831517610bb857610bb76109fe565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf9826107c7565b9150610c04836107c7565b925082610c1457610c13610bbf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3e81610c1f565b8114610c4957600080fd5b50565b600081519050610c5b81610c35565b92915050565b6000819050919050565b610c7481610c61565b8114610c7f57600080fd5b50565b600081519050610c9181610c6b565b92915050565b600080600080600060a08688031215610cb357610cb2610769565b5b6000610cc188828901610c4c565b9550506020610cd288828901610c82565b9450506040610ce388828901610a75565b9350506060610cf488828901610a75565b9250506080610d0588828901610c4c565b915050929550929590935056fea264697066735822122067f700507498113fd997cf2c6b2fbe3e9eec15556592640d6895f8ac2004b8b264736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063aec65af41161004e578063aec65af41461012a578063b60d428814610155578063d7b4750c1461015f578063f9e6e80c1461019c5761007b565b80630f0f30b2146100805780633ccfd60b146100ab578063893d20e8146100c2578063a48b4555146100ed575b600080fd5b34801561008c57600080fd5b506100956101c7565b6040516100a2919061074e565b60405180910390f35b3480156100b757600080fd5b506100c06101ef565b005b3480156100ce57600080fd5b506100d76103d2565b6040516100e4919061074e565b60405180910390f35b3480156100f957600080fd5b50610114600480360381019061010f919061079a565b6103fa565b60405161012191906107e0565b60405180910390f35b34801561013657600080fd5b5061013f610442565b60405161014c91906107e0565b60405180910390f35b61015d6104da565b005b34801561016b57600080fd5b5061018660048036038101906101819190610827565b610603565b604051610193919061074e565b60405180910390f35b3480156101a857600080fd5b506101b161064b565b6040516101be91906107e0565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610274906108d7565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102a390610928565b60006040518083038185875af1925050503d80600081146102e0576040519150601f19603f3d011682016040523d82523d6000602084013e6102e5565b606091505b5050905080610329576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610320906109af565b60405180910390fd5b60005b6001805490508110156103ce57600080600060018481548110610352576103516109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c690610a2d565b91505061032c565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610a8a565b905090565b603261050834600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610650565b1015610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054090610b29565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105979190610b49565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060018281548110610619576106186109cf565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b603281565b60008061065c8361068c565b90506000670de0b6b3a764000085836106759190610b7d565b61067f9190610bee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe9190610c97565b50505091505080915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107388261070d565b9050919050565b6107488161072d565b82525050565b6000602082019050610763600083018461073f565b92915050565b600080fd5b6107778161072d565b811461078257600080fd5b50565b6000813590506107948161076e565b92915050565b6000602082840312156107b0576107af610769565b5b60006107be84828501610785565b91505092915050565b6000819050919050565b6107da816107c7565b82525050565b60006020820190506107f560008301846107d1565b92915050565b610804816107c7565b811461080f57600080fd5b50565b600081359050610821816107fb565b92915050565b60006020828403121561083d5761083c610769565b5b600061084b84828501610812565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686520636f6e60008201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b60006108c1602583610854565b91506108cc82610865565b604082019050919050565b600060208201905081810360008301526108f0816108b4565b9050919050565b600081905092915050565b50565b60006109126000836108f7565b915061091d82610902565b600082019050919050565b600061093382610905565b9150819050919050565b7f4661696c656420746f2077697468647261772066756e64732066726f6d20746860008201527f6520636f6e747261637400000000000000000000000000000000000000000000602082015250565b6000610999602a83610854565b91506109a48261093d565b604082019050919050565b600060208201905081810360008301526109c88161098c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a38826107c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6a57610a696109fe565b5b600182019050919050565b600081519050610a84816107fb565b92915050565b600060208284031215610aa057610a9f610769565b5b6000610aae84828501610a75565b91505092915050565b7f546865207472616e73616374696f6e20616d6f756e7420697320746f6f206c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b13602183610854565b9150610b1e82610ab7565b604082019050919050565b60006020820190508181036000830152610b4281610b06565b9050919050565b6000610b54826107c7565b9150610b5f836107c7565b9250828201905080821115610b7757610b766109fe565b5b92915050565b6000610b88826107c7565b9150610b93836107c7565b9250828202610ba1816107c7565b91508282048414831517610bb857610bb76109fe565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf9826107c7565b9150610c04836107c7565b925082610c1457610c13610bbf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3e81610c1f565b8114610c4957600080fd5b50565b600081519050610c5b81610c35565b92915050565b6000819050919050565b610c7481610c61565b8114610c7f57600080fd5b50565b600081519050610c9181610c6b565b92915050565b600080600080600060a08688031215610cb357610cb2610769565b5b6000610cc188828901610c4c565b9550506020610cd288828901610c82565b9450506040610ce388828901610a75565b9350506060610cf488828901610a75565b9250506080610d0588828901610c4c565b915050929550929590935056fea264697066735822122067f700507498113fd997cf2c6b2fbe3e9eec15556592640d6895f8ac2004b8b264736f6c63430008130033",
  "devdoc": {
    "author": "tryyang2001",
    "details": "This contract is used to fund the contract with ETHAll function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {},
    "title": "FundMe",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "You can use this contract for only the most basic simulation",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 115,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 118,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 123,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}